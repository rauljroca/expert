import type { AstroIntegration } from 'astro';
import { type GetPlatformProxyOptions } from 'wrangler';
export type { Runtime } from './entrypoints/server.js';
export type Options = {
    /** Options for handling images. */
    imageService?: 'passthrough' | 'cloudflare' | 'compile' | 'custom';
    /** Configuration for `_routes.json` generation. A _routes.json file controls when your Function is invoked. This file will include three different properties:
     *
     * - version: Defines the version of the schema. Currently there is only one version of the schema (version 1), however, we may add more in the future and aim to be backwards compatible.
     * - include: Defines routes that will be invoked by Functions. Accepts wildcard behavior.
     * - exclude: Defines routes that will not be invoked by Functions. Accepts wildcard behavior. `exclude` always take priority over `include`.
     *
     * Wildcards match any number of path segments (slashes). For example, `/users/*` will match everything after the `/users/` path.
     *
     */
    routes?: {
        /** Extend `_routes.json` */
        extend: {
            /** Paths which should be routed to the SSR function */
            include?: {
                /** Generally this is in pathname format, but does support wildcards, e.g. `/users`, `/products/*` */
                pattern: string;
            }[];
            /** Paths which should be routed as static assets */
            exclude?: {
                /** Generally this is in pathname format, but does support wildcards, e.g. `/static`, `/assets/*`, `/images/avatar.jpg` */
                pattern: string;
            }[];
        };
    };
    /**
     * Proxy configuration for the platform.
     */
    platformProxy?: GetPlatformProxyOptions & {
        /** Toggle the proxy. Default `undefined`, which equals to `true`. */
        enabled?: boolean;
    };
    /**
     * Allow bundling cloudflare worker specific file types as importable modules. Defaults to true.
     * When enabled, allows imports of '.wasm', '.bin', and '.txt' file types
     *
     * See https://developers.cloudflare.com/pages/functions/module-support/
     * for reference on how these file types are exported
     */
    cloudflareModules?: boolean;
};
export default function createIntegration(args?: Options): AstroIntegration;
