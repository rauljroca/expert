import type { AstroConfig, AstroIntegrationLogger, HookParameters } from 'astro';
export declare function setImageConfig(service: string, config: AstroConfig['image'], command: HookParameters<'astro:config:setup'>['command'], logger: AstroIntegrationLogger): {
    service: import("astro").ImageServiceConfig<Record<string, any>>;
    endpoint: {
        route: string;
        entrypoint?: string | undefined;
    };
    domains: string[];
    remotePatterns: {
        port?: string | undefined;
        protocol?: string | undefined;
        hostname?: string | undefined;
        pathname?: string | undefined;
    }[];
    experimentalLayout?: "fixed" | "none" | "responsive" | "full-width" | undefined;
    experimentalObjectFit?: string | undefined;
    experimentalObjectPosition?: string | undefined;
    experimentalBreakpoints?: number[] | undefined;
} | {
    service: import("astro").ImageServiceConfig<Record<string, any>>;
    endpoint: {
        entrypoint: string | undefined;
    };
    domains: string[];
    remotePatterns: {
        port?: string | undefined;
        protocol?: string | undefined;
        hostname?: string | undefined;
        pathname?: string | undefined;
    }[];
    experimentalLayout?: "fixed" | "none" | "responsive" | "full-width" | undefined;
    experimentalObjectFit?: string | undefined;
    experimentalObjectPosition?: string | undefined;
    experimentalBreakpoints?: number[] | undefined;
};
